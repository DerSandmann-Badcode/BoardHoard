<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FolderDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ContextBoardDataGrid.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>138, 17</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoABEAYwBtAFoAtABYAOQAWADdAF4AnABnADIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAtAF4AmgBYANwAWADlAFoAtgBj
        AG8AaAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAaABaAFgA6ABeAP8rfzH/PpFG/zyPRP8Xbxr/AFgA/wBn
        AEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcAPQBYAPwVbhj/O45E/z6R
        Rv8sgDL/AV8B/wBXAOsAZwBhAAAAAAAAAAAAAAAAAGYAZABUAP8oeS3/bLJ6/2OpcP9Qmlr/V55i/3O4
        hP84h0D/AE4AyQBZABwAYAAmAGgACwAAAAAAAAAAAAAAAAAAAAAAAAAJAGAAJwBZABsATgDBNYQ9/3S4
        g/9XnmP/T5la/2OpcP9ts3z/K3wx/wBUAP8AZgBrAAAAAABmACMAVwD/Ln01/4HCkv80gjv/AFoA/wBX
        AP8AVAD/Gm0e/22xfP87iUP/K34x+QhlCf8AWQDnAGgAegAAAAAAAAAAAGgAdgBZAOUGZAf/K34x+TiH
        QP9tsn3/HW8h/wBTAP8AVwD/AFkA/zCAN/9/wpH/MoA5/wBWAP8AZwAmAF8AmwxmDf90uoX/KX0w/wBN
        AP8AZQD/AGcA/wBoAP8AVgD/GHIc/0CPSf9Snl3/cbaB/yJ2J/8AWwD/AGgARwBnAEAAWwD/IHMk/3G2
        gf9Tn1//QI9I/xp0Hv8AVgD/AGcA/wBnAP8AZQD/AE0A/yV6Kv92vIb/DWgQ/wBfAJ4AWADaOo1B/16m
        av8AUwD/AGcA/wBmAP8AZgD/AGYA/wBpAP8AXgD/AFYA/wBQAP9LmFb/cLeA/whjCf8AYQDAAGIAvwZi
        B/9utH3/T5ta/wBQAP8AVgD/AF4A/wBoAP8AZgD/AGYA/wBmAP8AZwD/AFMA/1qjZ/89j0X/AFgA2wBY
        AO9PnFr/PpBH/wBXAP8AZwD/AGYA/wBmAP8AZgD/AGYA/wBmAP8AaQD/AFkA/xVtGP92vIb/GnMd/wBc
        AOMAXQDkFnIZ/3a7h/8Ybxz/AFkA/wBpAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBnAP8AVwD/Oo5C/1Gc
        Xf8AWQDvAFkA7VCbW/89kEX/AFkA/wBmAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBpAP8AUwD/MYM3/3C1
        fv8HZAf/AGIAlQBiAJMFYgX/brN8/zWHPf8AUwD/AGkA/wBmAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBZ
        AP84jkD/UJtb/wBZAO4AWQDaQJFI/1OdXv8AVwD/AGcA/wBmAP8AZgD/AGYA/wBmAP8AaQD/AFoA/wVc
        Bf93u4j/OIpB/wBWAP8AZgAyAGcAKgBXAP81hzz/eb2K/wdfCP8AWQD/AGkA/wBmAP8AZgD/AGYA/wBm
        AP8AZwD/AFcA/1CaW/9AkUj/AFgA2gBbAKsheSb/Za10/wJhAv8AYgD/AGYA/wBmAP8AZwD/AGgA/wBW
        AP8HWgj/brV9/1mjZf8AVgD/AGQAtgAAAAAAAAAAAGQArgBVAP9Vn2D/creB/wldCv8AVQD/AGgA/wBn
        AP8AZgD/AGYA/wBjAP8AYAD/ZKtx/yN6KP8AWwCuAGMAZABeAP9nr3b/LIAy/wBXAP8AaQD/AGYA/wBc
        AP8AUQD/InEo/3a7h/9ZoWX/AFYA/wBgAM4AAAAHAAAAAAAAAAAAAAACAGEAxABVAP9Wn2H/eL2I/yVz
        Kv8AUQD/AFsA/wBmAP8AaQD/AFcA/yh9Lf9nr3X/AF4B/wBjAGoAZwARAFUA+z6ORv9mrnT/AFEA/wBU
        AP8AWAD/G24f/1adYv92vIb/PopH/wBTAP8AYACyAAAABgAAAAAAAAAAAAAAAAAAAAAAAAABAGEArQBS
        AP88iET/druG/1ifZP8dcCH/AFgA/wBUAP8ATwD/ZKtx/0GQSf8AVQD9AGgAFQAAAAAAYgCkBWAG/2uy
        ev9Ekk3/OYVA/2Gnb/9stHz/VZ1h/xJoFP8AUwD1AGQAYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAGYAXQBTAPEQZhL/U5xe/220e/9iqG//OYZB/0KQSv9ss3v/BmEH/wBgAKsAAAAAAAAAAABn
        ACoAVgD/KX0v/3e7hv9cpmj/OYtC/w5oEP8AVADeAF4AhABoADIAZgASAGYAMwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABmADIAZwATAGkALgBeAIAAVADcDWcP/ziKQP9bpWj/d7yI/yx/M/8AVgD/AGcAMQAA
        AAAAAAAAAAAAAABmAK4AYQD/BGUF/wBbAOoAVwDHAF8AqQBgAIMAWgB/AFcAxQBYAP8AZQD/AGcAPAAA
        AAAAAAAAAAAAAAAAAAAAZwA3AGUA/wBYAP8AVwDHAFoAfQBgAH4AXwCiAFgAwQBbAOgEZQX/AGEA/wBm
        ALcAAAAAAAAAAAAAAAAAAAAAAGcAFQBlAIIAYwCJAGAAkwBXALsAWwDYE28W/zGCOP9HmFL/P45H/wBh
        AP8AYwC1AAAAAAAAAAAAAAAAAAAAAABkAK0AYAD/PYxF/0mZUv8xgzj/FG8W/wBbANUAVgC1AGAAjQBi
        AIYAZACFAGcAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAGUAPABUALALZQ35QI9J/1+nbP9hq2//W6Rn/1Gb
        Xf98v43/KH0u/wBYAP8AaAAZAAAAAAAAAAAAZgASAFgA/CV6Kv98v4z/U51e/1qiZv9hqm7/X6dr/0CP
        Sf8MZQ35AFQArgBkAD4AAAAAAAAAAAAAAAAAAAAAAAAAAABhAIsAVQD/QIxJ/3C1f/9aoGf/MYA4/wxp
        Df8AXAD/AEkA/0qXVf9eqGv/AFkA/wBmAGUAAAAAAAAAAABlAF4AWAD/W6Vn/06aWf8ASgD/AFsA/wto
        Df8wgDf/WaBl/2+1f/9BjUr/AFUA/wBhAIwAAAAAAAAAAAAAAAAAZAB3AFYA/1WeYP9wt4D/IG8l/wBT
        AP8AWAD/AGAA/wBnAP8AWwD/GHEb/2uzev8Maw7/AF8AowAAAAAAAAAAAGAAnAlpCv9qsnr/HHQg/wBb
        AP8AZwD/AGAA/wBYAP8AUwD/H24j/261ff9XoGP/AFcA/wBkAH0AAAAAAGYAIABVAP8+j0f/craB/wJY
        Av8AVwD/AGgA/wBnAP8AZgD/AGYA/wBjAP8AXwD/Y6pw/yx/Mv8AWgDMAAAAAAAAAAAAWgDGKHwu/2Ks
        cf8AYQD/AGMA/wBmAP8AZgD/AGcA/wBoAP8AVwD/AFYA/3C1f/9CkEv/AFUA/wBnACYAYgCDB2UI/22z
        e/8gdST/AFYA/wBpAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBaAP9Xn2P/Oo1C/wBYAOIAAAAAAAAAAABZ
        AN04iz//WaJl/wBbAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBpAP8AVgD/G3Ie/221fP8KZwv/AGEAiQBb
        ALMleyr/Yapu/wBgAP8AYwD/AGYA/wBmAP8AZgD/AGYA/wBmAP8AZgD/AFkA/06aWP9BlEv/AFgA8gAA
        AAIAAAAAAFkA6D2SRv9RnFv/AFkA/wBmAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBkAP8AXwD/YKlt/yl+
        L/8AWgC6AFoAvSh9Lv9hq2//AF8A/wBjAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBmAP8AWQD/T5xa/0GU
        Sf8AWADwAAAAAgAAAAAAWQDmPZFF/1KdXv8AWgD/AGYA/wBmAP8AZgD/AGYA/wBmAP8AZgD/AGQA/wBd
        AP9hqm//LIEz/wBZAMUAYACWCWcK/2+1fv8gdST/AFQA/wBqAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBa
        AP9ao2f/OItA/wBZAN8AAAAAAAAAAABZANk2iD7/XKRp/wBbAP8AZgD/AGYA/wBmAP8AZgD/AGYA/wBp
        AP8AVQD/G3Ef/2+2fv8LaQ7/AGEAngBnADIAVgD/QZFK/3S5hP8JXQv/AFIA/wBYAP8AYgD/AGkA/wBn
        AP8AYAD/AmIC/2uzev8ieSf/AFsAxgAAAAAAAAAAAFwAwB52Iv9stHr/BWMF/wBeAP8AaAD/AGkA/wBi
        AP8AWAD/AFMA/wdcCP9yt4L/RZRO/wBVAP8AZwA5AAAAAABjAKMAVwD/VJ1g/3C1gP9Cj0z/S5tW/xFq
        E/8AUgD/AF4A/wBNAP9EkU3/bLR7/wJfAv8AYgCVAAAAAAAAAAAAYwCNAF4A/2qyeP9Ik1L/AE0A/wBe
        AP8AUwD/DmgQ/0ubVv9Cj0v/b7R+/1egY/8AWQD/AGMArQAAAAAAAAAAAAAAAABhALAAWAD/LIEx/z6P
        R/85hUH/XqRr/y98Nv8PZBH/QI1J/4XHl/8rfTH/AFcA/wBnADkAAAAAAAAAAABmADIAWAD/J3kt/4TH
        l/9CkEv/EGQR/y56NP9epWv/OoZC/z6ORv8tgTT/AFgA/wBhALYAAAAEAAAAAAAAAAAAAAAAAAAAAABl
        AFkAWQCiAFgAeABQAHQidSf/aK92/263ff9yuIL/MoA5/wBXAP8AZgC6AAAAAAAAAAAAAAAAAAAAAABm
        ALIAVgD/L341/3G4gf9ut33/aLF2/yV3Kv8AUAB3AFgAcwBZAKMAZQBcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAIgAYAD/HnUi/wpnC/8AWAD/AGYA0QBoABEAAAAAAAAAAAAA
        AAAAAAAAAGcADQBmAMsAWAD/CWYK/x51Iv8BYQH/AFsAjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjAFMAWwC7AGAAywBoAHcAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAHQAYQDJAFsAvgBiAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+A//AfAH/gDgAPgAQABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        gAAAA8AAAAfgAIAP8AGAB+ABwAPAA8ADwAPgAYAHwAGAA4ABgAEAAYAAAAGAAAABgAAAAYAAAAGAAAAB
        gACAAYABwAGAA+ADwAf+A8B//w/w//////8=
</value>
  </data>
</root>